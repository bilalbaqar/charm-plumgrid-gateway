#!/usr/bin/env python3

import amulet
import unittest


class TestDeployment(unittest.TestCase):
    @classmethod
    def setUpClass(cls):
        cls.deployment = amulet.Deployment(series='trusty')
        cls.deployment.load_bundle_file(
            bundle_file='tests/files/plumgrid-gateway.yaml',
            deployment_name='test')
        try:
            cls.deployment.setup(timeout=2000)
            cls.deployment.sentry.wait()
        except amulet.helpers.TimeoutError:
            amulet.raise_status(
                amulet.SKIP,
                msg="Environment wasn't stood up in time")
        except:
            raise

    def test_plumgrid_gateway_started(self):
        pg_sentry = self.deployment.sentry['plumgrid-gateway/0']
        agent_state = pg_sentry.info['agent-state']
        if agent_state != 'started':
            amulet.raise_status(
                amulet.FAIL,
                msg='plumgrid gateway is not in a started state')

    def test_plumgrid_gateway_relation(self):
        pg_sentry = self.deployment.sentry['plumgrid-gateway/0']
        relation = pg_sentry.relation(
            'plumgrid', 'plumgrid-director:plumgrid')
        if not relation['private-address']:
            amulet.raise_status(
                amulet.FAIL, msg='Relation not found.')

if __name__ == '__main__':
    unittest.main()
